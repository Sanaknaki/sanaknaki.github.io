{"version":3,"sources":["file/resume_ali.pdf","logo-google.png","js/component/google/resultLink.jsx","js/component/google/projectImage.jsx","js/component/google/roundedLinkButton.jsx","js/component/google/projectDescription.jsx","js/component/google/aliNation.jsx","js/component/google/footer.jsx","js/theme/google.jsx","js/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","ResultLink","title","this","props","link","href","Resume","rel","style","color","fontSize","marginBottom","Fragment","url","body","React","Component","ProjectImage","links","sketch_link","push","className","work_link","Col","md","onClick","toggleProjectInfo","img_link","more_img_link","description","src","width","alt","draggable","renderLinkGroup","RoundedLinkButton","download_name","download","Button","icon","website","ProjectDescription","listOfButtons","image_link","marginTop","borderColor","renderRoundedLinkButtons","renderConcept","AliNation","Pagination","Item","key","active","Footer","Navbar","expand","bottom","position","footerStickyOrFixed","Nav","Google","state","col","projectInfoEnabled","bind","close","setState","listOfResultLinks","data","about","map","resultLink","listOfProjects","projects","project","tabAbout","tabProjects","Brand","logo","height","id","InputGroup","FormControl","placeholder","aria-label","aria-describedby","Append","Tabs","paddingLeft","defaultActiveKey","onSelect","Tab","eventKey","Container","padding","margin","Row","paddingTop","renderResultLinks","maxWidth","marginLeft","marginRight","renderProjects","paddingRight","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bd2c73aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume_ali.a0dac9b0.pdf\";","module.exports = __webpack_public_path__ + \"static/media/logo-google.fd9d2972.png\";","import React from 'react';\n\nimport Resume from '../../../file/resume_ali.pdf';\n\nimport '../../../css/google.css';\n\nclass ResultLink extends React.Component {\n    render() {\n\n        let title = (this.props.link) ? <a href={Resume} rel=\"noopener noreferrer\" style={{color: \"#1a0dab\", fontSize: \"18px\", marginBottom: \"0px\"}}>{this.props.title}</a> : <p style={{color: \"#1a0dab\", fontSize: \"18px\", marginBottom: \"0px\"}}>{this.props.title}</p>;\n\n        return (\n            <React.Fragment>\n                <p style={{color: \"#222\", fontSize: \"13px\", marginBottom: \"0px\"}}>{this.props.url}</p>\n                {title}\n                <p style={{color: \"#222\", fontSize: \"13px\", marginBottom: \"30px\"}}>{this.props.body}</p>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ResultLink;\n","import React from 'react';\n\nimport { Col } from 'react-bootstrap';\n\nimport '../../../css/google.css';\n\nclass ProjectImage extends React.Component {\n\n    renderLinkGroup() {\n        let links = [];\n        \n        if(this.props.sketch_link !== \"\") { links.push(<span className=\"project-image-link\"><i className=\"fab fa-sketch\"></i></span>); }\n        if(this.props.work_link !== \"\") { links.push(<span className=\"project-image-link\"><i className=\"fas fa-globe-americas\"></i></span>); }\n\n        return <span>{links}</span>\n    };\n\n    render() {\n        return (\n            <Col md={4} style={{marginBottom: \"15px\"}}>\n                <img className=\"project-image\" onClick={() => this.props.toggleProjectInfo(this.props.img_link, this.props.more_img_link, this.props.sketch_link, this.props.work_link, this.props.description, null)} src={\"/img/\" + this.props.img_link + \".png\"} width={\"100%\"} alt=\"Project\" draggable={false} />\n                <p className=\"project-image-title\">{this.props.title}</p>\n                {this.renderLinkGroup()}\n            </Col>\n        );\n    }\n}\n\nexport default ProjectImage;\n","import React from 'react';\n\nimport { Button } from 'react-bootstrap';\n\nimport '../../../css/google.css';\n\n\nclass RoundedLinkButton extends React.Component {\n    render() {\n\n        let button = (this.props.title === \"Download Sketch File\") ?\n            <a href={\"/sketch/\" + this.props.download_name + \".sketch\"} download><Button className=\"rounded-link-btn\">{this.props.icon} <span style={{fontSize: \"14px\"}}>{this.props.title}</span></Button></a> :\n            <a href={this.props.website} rel=\"noopener noreferrer\"><Button className=\"rounded-link-btn\">{this.props.icon} <span style={{fontSize: \"14px\"}}>{this.props.title}</span></Button></a>;\n\n        return button;\n    }\n}\n\nexport default RoundedLinkButton;\n","import React from 'react';\n\nimport { Col } from 'react-bootstrap';\n\nimport RoundedLinkButton from './roundedLinkButton.jsx';\n\nimport '../../../css/google.css';\n\nclass ProjectDescription extends React.Component {\n\n    renderRoundedLinkButtons() {\n        let listOfButtons = [];\n\n        if(this.props.sketch_link !== \"\") {\n            listOfButtons.push(\n                <RoundedLinkButton\n                    icon={<i style={{color: \"#609beb\"}} className=\"fab fa-sketch\"></i>}\n                    download_name={this.props.image_link}\n                    title=\"Download Sketch File\"\n                />\n            );\n        }\n\n        if(this.props.work_link !== \"\") {\n            listOfButtons.push(\n                <RoundedLinkButton\n                    icon={<i style={{color: \"#609beb\"}} className=\"fas fa-globe-americas\"></i>}\n                    website={this.props.work_link}\n                    title=\"Check Out Website\"\n                />\n            );\n        }\n\n        return <div style={{ width: \"100%\", marginBottom: \"1rem\" }} className=\"text-left\">{listOfButtons}</div>;\n    };\n\n    renderConcept() {\n        if(this.props.more_img_link !== \"\") {\n            return <img style={{marginBottom: \"1rem\"}} src={\"/img/\" + this.props.more_img_link + \".png\"} width={\"100%\"} alt=\"Project Concept\" draggable={false} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        return (\n            <Col md={12} className=\"project-desc\" style={{width: \"100%\"}}>\n                <span style={{width: \"100%\", fontSize: \"15px\", marginBottom: \"1rem\", marginTop: \"1rem\"}} className=\"text-left\"><i className=\"fas fa-times close-icon\" onClick={() => this.props.toggleProjectInfo(null, null, null, null, null, 1)}></i></span>\n                <img className=\"project-image\" src={\"/img/\" + this.props.image_link + \".png\"} width={\"100%\"} alt=\"Project\" draggable={false} />\n                <hr style={{width: \"100%\", borderColor: \"rgba(255,255,255,.2)\"}} />\n                {this.renderRoundedLinkButtons()}\n                <p style={{fontSize: \"18px\"}}>{this.props.description}</p>\n                {this.renderConcept()}\n            </Col>\n        );\n    }\n}\n\nexport default ProjectDescription;\n","import React from 'react';\n\nimport { Pagination } from 'react-bootstrap'\n\nimport '../../../css/google.css';\n\nclass AliNation extends React.Component {\n    render() {\n        return (\n            <Pagination className=\"text-center\">\n                <Pagination.Item key={1} active={false}>\n                    <span className=\"pagination-name start\">A</span>\n                </Pagination.Item>\n                <Pagination.Item key={2} active={true}>\n                    <span className=\"pagination-name middle\">l</span>\n                    <br />\n                    <span className=\"index\">1</span>\n                </Pagination.Item>\n                <Pagination.Item key={3} active={false}>\n                    <span className=\"pagination-name middle\">l</span>\n                    <br />\n                    <span className=\"index\">2</span>\n                </Pagination.Item>\n                <Pagination.Item key={4} active={false}>\n                    <span className=\"pagination-name middle\">l</span>\n                    <br />\n                    <span className=\"index\">3</span>\n                </Pagination.Item>\n                <Pagination.Item key={5} active={false}>\n                    <span className=\"pagination-name middle\">l</span>\n                    <br />\n                    <span className=\"index\">4</span>\n                </Pagination.Item>\n                <Pagination.Item key={6} active={false}>\n                    <span className=\"pagination-name middle\">l</span>\n                    <br />\n                    <span className=\"index\">5</span>\n                </Pagination.Item>\n                <Pagination.Item key={7} active={false}>\n                    <span className=\"pagination-name end\">i</span>\n                </Pagination.Item>\n            </Pagination>\n        );\n    }\n}\n\nexport default AliNation;\n","import React from 'react';\n\nimport { Navbar, Nav } from 'react-bootstrap';\n\nimport '../../../css/google.css';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <div>\n            <Navbar className=\"footer-google left-padding right-padding\" expand=\"lg\" style={{bottom: \"0px\", position : this.props.footerStickyOrFixed}}>\n                <Nav className=\"text-center\">\n                    Made with ❤ and 🍵\n                </Nav>\n            </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { \n    Navbar, \n    Nav, \n    InputGroup, \n    FormControl,\n    Button, \n    Tabs, \n    Tab,\n    Container, \n    Row,\n    Col } from 'react-bootstrap';\n\nimport ResultLink from '../component/google/resultLink.jsx';\nimport ProjectImage from '../component/google/projectImage.jsx';\nimport ProjectDescription from '../component/google/projectDescription.jsx';\nimport AliNation from '../component/google/aliNation.jsx';\nimport Footer from '../component/google/footer.jsx';\n\nimport logo from '../../logo-google.png';\n\nimport data from '../../data/data.json';\n\nimport '../../css/google.css';\n\nclass Google extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            col: 12,\n            projectInfoEnabled: false,\n            footerStickyOrFixed: \"fixed\",\n            \n            image_link: \"\",\n            more_img_link: \"\",\n            sketch_link: \"\",\n            work_link: \"\",\n            description:  \"\",\n\n        }\n\n        this.toggleProjectInfo = this.toggleProjectInfo.bind(this);\n    }\n\n    toggleProjectInfo(image_link=\"\", more_img_link=\"\", sketch_link=\"\", work_link=\"\", description=\"\", close=0) {\n        if(close) {\n            this.setState({\n                col: 12,\n                projectInfoEnabled: false,\n                footerStickyOrFixed: \"fixed\",\n    \n                image_link,\n                more_img_link,\n                sketch_link,\n                work_link,\n                description\n            });\n        } else {\n            this.setState({\n                col: 6,\n                projectInfoEnabled: true,\n                footerStickyOrFixed: \"relative\",\n    \n                image_link,\n                more_img_link,\n                sketch_link,\n                work_link,\n                description\n            });\n        }\n    };\n\n    renderResultLinks() {\n        let listOfResultLinks = [];\n\n        data.about.map(resultLink => {\n            listOfResultLinks.push(\n                <ResultLink \n                    url={resultLink.url} \n                    title={resultLink.title}\n                    body={resultLink.body}\n                    link={resultLink.link}\n                />\n            );\n        });\n\n        return listOfResultLinks;\n    };\n\n    renderProjects() {\n        let listOfProjects = [];\n\n        data.projects.map(project => {\n            listOfProjects.push(\n                <ProjectImage \n                    img_link={project.img_link}\n                    more_img_link={project.more_img_link}\n                    title={project.title} \n                    description={project.description} \n                    sketch_link={project.sketch_link}\n                    work_link={project.work_link}\n\n\n                    col={this.state.col} \n                    toggleProjectInfo={this.toggleProjectInfo} \n                />\n            );\n        });\n\n        return listOfProjects;\n\n    };\n\n    render() {\n        const tabAbout = <div className=\"tab-title\"><i className=\"far fa-user\"></i> About</div>;\n        const tabProjects = <div className=\"tab-title\"><i className=\"far fa-sticky-note\"></i> Projects</div>;\n    \n        return (\n            <React.Fragment>\n                <Navbar className=\"navbar-google\" expand=\"lg\">\n                    <Navbar.Brand href=\"#home\"><img src={logo} height={50} alt=\"Logo\" /></Navbar.Brand>\n        \n                    <Navbar id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <InputGroup>\n                                <FormControl className=\"search-google\" placeholder=\"Sanaknaki\" aria-label=\"Sanaknaki\" aria-describedby=\"basic-addon2\" />\n                                <InputGroup.Append>\n                                    <Button className=\"search-button-google\"><i className=\"fas fa-search blue\"></i></Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Nav>\n                    </Navbar>\n                </Navbar>\n\n                <Tabs style={{paddingLeft: \"85px\"}} defaultActiveKey=\"about\" id=\"uncontrolled-tab-example\" onSelect={() => this.toggleProjectInfo(null, null, null, null, null, 1)}>\n\n                    <Tab eventKey=\"about\" title={tabAbout}>\n                        <Container style={{padding: \"0px\", margin: \"0px\"}}>\n                            <Row>\n                                <Col md={12} className=\"left-padding\" style={{paddingTop: \"10px\"}}>\n                                    <p className=\"results-title dimmedgrey\">About 2 years of professional experience</p>\n                                </Col>\n\n                                <Col md={8} className=\"left-padding\">\n                                    {this.renderResultLinks()}\n                                </Col>\n\n                                <Col md={6} className=\"pagination-padding\">\n                                    <AliNation />\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Tab>\n\n                    <Tab eventKey=\"projects\" title={tabProjects}>\n                        <Container style={{maxWidth: \"100%\"}}>\n                            <Row>\n                                <Col md={this.state.col}>\n                                    <Container>\n                                        <Row style={{marginTop: \"10px\", marginLeft: \"5px\", marginRight: \"5px\"}}>\n                                            {this.renderProjects()}\n                                        </Row>\n                                    </Container>\n                                </Col>\n                                {(this.state.projectInfoEnabled) ? \n                                <Col md={6} style={{marginRight: \"0px\", paddingRight: \"0px\"}}>\n                                    <ProjectDescription \n                                        image_link={this.state.image_link}\n                                        more_img_link={this.state.more_img_link}\n                                        sketch_link={this.state.sketch_link}\n                                        work_link={this.state.work_link}\n\n                                        toggleProjectInfo={this.toggleProjectInfo}\n                                        description={this.state.description}\n                                    />\n                                </Col>\n                                : null}\n                            </Row>\n                        </Container>\n                    </Tab>\n                </Tabs>\n\n                <Footer footerStickyOrFixed={this.state.footerStickyOrFixed} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Google;\n","import React from 'react';\n\nimport Google from '../js/theme/google.jsx';\n\nimport '../css/App.css';\n\nfunction App() {\n    return (\n      <Google />\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './js/App.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}